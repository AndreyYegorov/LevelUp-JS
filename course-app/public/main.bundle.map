{"version":3,"sources":["webpack:///./src/app/services/server.service.ts","webpack:///./src/app/services/chat.service.ts","webpack:///./src/app/services/date.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/pipes/filter.pipe.ts","webpack:///./src/app/pipes/highlight.pipe.ts","webpack:///./src/app/pipes/transformMessage.pipe.ts","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/signup/signup.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Router } from \"@angular/router\";\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class ServerService {\n\n  constructor(private http: Http) { \n  }\n\n  signup(user) {\n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });\n\n    console.log(user);\n\n    return this.http.post('http://localhost:3000/api/signup', user, {headers: headers})\n      .toPromise()\n      .then(res => res.json())\n      .catch(this.handleError);\n  }\n\n  login(user) {\n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });\n\n    console.log(user);\n\n    return this.http.post('http://localhost:3000/api/login', user, {headers: headers})\n      .toPromise()\n      .then(res => res.json())\n      .catch(this.handleError);\n  }\n\n  logout() {\n    return this.http.get('http://localhost:3000/api/logout')\n      .toPromise()\n      .then(res => res.json())\n      .catch(this.handleError);\n  }\n\n  getLoggedUser() {\n    return this.http.get('http://localhost:3000/api/user')\n      .toPromise()\n      .then(res => res.json())\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/server.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\n\nimport { ChatMessage } from '../utils/chat-message';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class ChatService {\n\n  constructor(private http: Http) { }\n\n  getHashes(message) {\n    let hashMatches = message.match(/(^|\\s)#[\\wа-я]+/g);\n\n    if(!hashMatches) return [];\n\n    return hashMatches.map((el, index) => {\n      if(message.charAt(0) === '#' && index === 0) return el;\n\n      return el.slice(1);\n    });\n  }\n\n  filterMessagesByHash(messages, hash) {\n    return this.getMessagesAll()\n      .map(res => {\n        if(!hash){\n          return messages = res\n        }\n        else {\n          return messages = res.filter(el => el.hashes.find(elhash => elhash === hash));\n        }\n      });\n  }\n\n  getMessagesAll() {\n    return this.http.get('http://localhost:3000/api/messages')\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  addMessage(newMessage) {\n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });\n\n    console.log(newMessage);\n\n    return this.http.post('http://localhost:3000/api/message', newMessage, {headers: headers})\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  upload(formData) {\n    return this.http.post('http://localhost:3000/api/upload', formData)\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  private handleError (error: Response | any) {\n    return Observable.throw(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/chat.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DateService {\n\n  constructor() { }\n\n  getCurrentDate() {\n    let dateNow = new Date(),\n      day = (dateNow.getDate() < 10) ? '0' + dateNow.getDate() : dateNow.getDate(),\n      month = (dateNow.getMonth() + 1 < 10) ? '0' + (dateNow.getMonth() + 1) : dateNow.getMonth() + 1,\n      yearFull = dateNow.getFullYear(),\n      hours = (dateNow.getHours() < 10) ? '0' + (dateNow.getHours()) : dateNow.getHours(),\n      minutes = (dateNow.getMinutes() < 10) ? '0' + (dateNow.getMinutes()) : dateNow.getMinutes();\n\n    return `${day}.${month}.${yearFull} at ${hours}:${minutes}`;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/date.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 338;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 338\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  ngOnInit() {\n    console.log('Hi!');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { ChatService } from './services/chat.service';\nimport { DateService } from './services/date.service';\nimport { ServerService } from './services/server.service';\n\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { HighlightPipe } from './pipes/highlight.pipe';\nimport { TransformMessage } from './pipes/transformMessage.pipe';\n\nconst appRoutes: Routes = [\n  {\n    path: '', component: ChatComponent\n  },\n  {\n    path: 'signup', component: SignupComponent\n  },\n  {\n    path: 'login', component: LoginComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    SignupComponent,\n    LoginComponent,\n    FilterPipe,\n    HighlightPipe,\n    TransformMessage\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [\n    ChatService,\n    DateService,\n    ServerService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\nimport { HashLocationStrategy, Location, LocationStrategy } from '@angular/common';\nimport { Http, Headers } from '@angular/http';\n\nimport { ChatMessage } from '../utils/chat-message';\nimport { User } from '../utils/user';\n\nimport { ChatService } from '../services/chat.service';\nimport { DateService } from '../services/date.service';\nimport { ServerService } from '../services/server.service';\n\nimport 'rxjs/add/operator/catch';\n\n@Component({\n  selector: 'chat',\n  providers: [ Location, {provide: LocationStrategy, useClass: HashLocationStrategy} ],\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent {\n  isLogged: Boolean = false;\n  imagesToUpload = [];\n\n  location: Location;\n\n  title = 'It\\'s our great chat!';\n  messages: ChatMessage[];\n  userName: string;\n\n  constructor(\n    private chatservice: ChatService,\n    private dateservice: DateService,\n    private serverservice: ServerService,\n    location: Location,\n    private http: Http\n  ) { \n    this.location = location;\n  }\n\n  getMessagesAll() {\n    this.chatservice.getMessagesAll()\n      .subscribe(messages => {\n        console.log(messages);\n\n        this.messages = messages;\n      });\n  }\n\n  filterMessagesByHash(messages, hash) {\n    this.chatservice.filterMessagesByHash(messages, hash)\n      .subscribe(messages => {\n        this.messages = messages;\n      });\n  }\n\n  addMessage(messageText) {\n    let date = this.dateservice.getCurrentDate(),\n      userName = this.userName,\n      hashes = this.chatservice.getHashes(messageText),\n      avatarUrl = `http://api.adorable.io/avatars/50/${userName}@adorable.png`,\n      imageUrl = this.imagesToUpload.length ? `./assets/uploads/${this.imagesToUpload[0]['name']}` : '';\n\n    let newMessage = {\n      userName,\n      messageText,\n      hashes,\n      date,\n      avatarUrl,\n      imageUrl\n    };\n\n    this.chatservice.addMessage(newMessage)\n      .subscribe(message => {\n        console.log(message);\n        \n        this.messages.push(message);\n      });\n  }\n\n  upload() {\n    let formData = new FormData(),\n      files = this.imagesToUpload;\n\n      if(files.length) {\n        formData.append('image', files[0], files[0]['name']);\n\n        this.chatservice.upload(formData)\n          .subscribe(files => {\n            console.log('files: ', files);\n\n            this.imagesToUpload = [];\n          });\n      }\n  }\n\n  fileChangeEvent(fileInput) {\n    this.imagesToUpload = <Array<File>>fileInput.target.files;\n  }\n\n  listenLocation() {\n    if(decodeURI(location.hash)) this.filterMessagesByHash(this.messages, decodeURI(location.hash));\n\n    this.location.subscribe((ev) => {\n      if(ev.type === 'hashchange') {\n        this.filterMessagesByHash(this.messages, decodeURI(location.hash));\n      }\n    });\n  }\n\n  getLoggedUser() {\n    this.serverservice.getLoggedUser()\n      .then(user => {\n        this.isLogged = true;\n\n        this.userName = user.username;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  logout() {\n    this.serverservice.logout()\n      .then(user => {\n        this.isLogged = false;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  ngOnInit() {\n    this.getLoggedUser();\n    this.listenLocation();\n\n    if(!decodeURI(location.hash)) this.getMessagesAll();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat/chat.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ServerService } from '../services/server.service';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginError: string;\n\n  user = {\n    username: '',\n    password: ''\n  };\n\n  constructor(\n    private serverservice: ServerService,\n    private router: Router\n    ) { }\n\n  login() {\n    this.serverservice.login(this.user)\n      .then(user => {\n        console.log(user);\n\n        this.user.username = '';\n        this.user.password = '';\n\n        this.redirectToHome();\n      })\n      .catch(error => {\n        console.log(error);\n\n        this.loginError = 'Login error. Please, try use another username or password.';\n      });\n  }\n\n  redirectToHome() {\n    this.router.navigate(['/']);\n  }\n\n  getLoggedUser() {\n    this.serverservice.getLoggedUser()\n      .then(user => {\n        this.redirectToHome();\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  ngOnInit() {\n    this.getLoggedUser();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ChatMessage } from '../utils/chat-message';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(messages: ChatMessage[], term: string) {\n    if(!term) return messages;\n\n    term = term.toLowerCase();\n\n    return messages.filter(message => {\n      let userName = message.userName.toLowerCase(),\n        messageText = message.messageText.toLowerCase();\n        \n      return userName.includes(term) || messageText.includes(term);\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/filter.pipe.ts","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n  name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, term): string {\n    if(!term) return text;\n\n    return text.replace(term, (match) => `<span class=\"highlight\">${match}</span>`);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/highlight.pipe.ts","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n  name: 'transformMessage'\n})\nexport class TransformMessage implements PipeTransform {\n\n  transform(text: string, message) {\n    // RegExp: clear hash | hash outside and inside span | hash inside span\n    let findHashes = /(#[\\wа-я]+)|(#<span(.+)?>[\\wа-я]+<\\/span>([\\wа-я]+)?)|(<span(.+)?#([\\wа-я]+)?<\\/span>([\\wа-я]+)?)/g;\n      \n    let hashes = message.hashes;\n\n    if(hashes.length > 0) {\n      let index = 0;\n\n      return text.replace(findHashes, (match) => {\n        let hash = hashes[index];\n\n        index++;\n\n        return `<a href=\"${hash}\">${match}</a>`\n      });\n    }\n    else {\n      return text;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/transformMessage.pipe.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from '../utils/user';\n\nimport { ServerService } from '../services/server.service';\n\n@Component({\n  selector: 'signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupError: string;\n\n  user: User = {\n      username: '',\n      name: '',\n      password: ''\n  };\n\n  constructor(\n    private serverservice: ServerService,\n    private router: Router\n    ) { }\n\n  signup() {\n    this.serverservice.signup(this.user)\n      .then(user => {\n        console.log(user);\n\n        this.user.username = '';\n        this.user.name = '';\n        this.user.password = '';\n\n        this.redirectToHome();\n      })\n      .catch(error => {\n        console.log(error);\n\n        this.signupError = 'Signup error. Please, try use another username.';\n      });\n  }\n\n  redirectToHome() {\n    this.router.navigate(['/']);\n  }\n\n  getLoggedUser() {\n    this.serverservice.getLoggedUser()\n      .then(user => {\n        this.redirectToHome();\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  ngOnInit() {\n    this.getLoggedUser();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/signup/signup.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 520\n// module chunks = 1","module.exports = \".chat {\\n    \\n}\\n.chat * {\\n    box-sizing: inherit;\\n}\\n.chat__auth {\\n\\n}\\n.chat__auth-list {\\n    margin: 0;\\n    padding: 0;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: end;\\n        -ms-flex-pack: end;\\n            justify-content: flex-end;\\n    list-style: none;\\n}\\n.chat__auth-item {\\n    margin: 0 0 0 10px;\\n}\\n.chat__auth-link {\\n\\n}\\n\\n.chat__search {\\n    position: relative;\\n    margin: 0 0 30px;\\n}\\n.chat__search:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    right: 10px;\\n    width: 12px;\\n    height: 100%;\\n    background: url(assets/img/icon-search.png) 0 50% no-repeat;\\n}\\n.chat__search-input {\\n    \\n}\\n.chat__heading {\\n\\n}\\n.chat__user {\\n\\n}\\n.chat__messages {\\n\\n}\\n.chat__messages-list {\\n    margin: 0;\\n    padding: 0;\\n    list-style: none;\\n}\\n.chat__messages-list-message {\\n\\n}\\n.chat__messages-message {\\n    position: relative;\\n    margin: 0 0 30px;\\n    padding: 20px 20px 20px 90px;\\n    border: 1px solid #ddd;\\n}\\n.chat__messages-message:last-child {\\n    margin-bottom: 60px;\\n}\\n.chat__messages-message-header {\\n    margin: 0 0 15px;\\n    text-align: right;\\n}\\n.chat__messages-message-avatar {\\n    position: absolute;\\n    top: 20px;\\n    left: 20px;\\n    width: 50px;\\n    width: 50px;\\n    margin: 0 0 10px;\\n}\\n.chat__messages-message-avatar img {\\n    width: 100%;\\n}\\n.chat__messages-message-username {\\n    float: left;\\n    color: #ababab;\\n    font-family: \\\"FuturaNewBook-Reg\\\", Arial, Helvetica, sans-serif;\\n    font-size: 22px;\\n}\\n.chat__messages-message-desc {\\n    margin: 0 0 1em;\\n    min-height: 10px;\\n    font-size: 23px;\\n}\\n.chat__messages-message-desc:last-child {\\n    margin-bottom: 0;\\n}\\n.chat__messages-message-pic {\\n    overflow: hidden;\\n    margin: 1em -20px -20px -90px;\\n}\\n.chat__messages-message-pic img {\\n    display: block;\\n    max-width: 100%;\\n}\\n.chat__messages-message-date {\\n    color: #c3b07a;\\n    font-family: \\\"FuturaNewBook-Reg\\\", Arial, Helvetica, sans-serif;\\n    font-size: 11px;\\n    letter-spacing: .16em;\\n    text-transform: uppercase;\\n}\\n.chat__form {\\n    \\n}\\n.chat__form-input-textarea {\\n\\n}\\n.chat__form-input-file {\\n\\n}\\n.chat__form button {\\n\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/chat.component.css\n// module id = 521\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = 522\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.css\n// module id = 523\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 524\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"chat\\\">\\n      <nav class=\\\"chat__auth\\\">\\n          <ul class=\\\"chat__auth-list\\\" *ngIf=\\\"isLogged\\\">\\n            <li class=\\\"chat__auth-item\\\">\\n              <span (click)=\\\"logout()\\\" class=\\\"chat__auth-link button mod_v1\\\">Logout</span>\\n            </li>\\n          </ul>\\n          <ul class=\\\"chat__auth-list\\\" *ngIf=\\\"!isLogged\\\">\\n            <li class=\\\"chat__auth-item\\\">\\n              <a routerLink=\\\"/signup\\\" class=\\\"chat__auth-link button mod_v1\\\">Signup</a>\\n            </li>\\n            <li class=\\\"chat__auth-item\\\">\\n              <a routerLink=\\\"/login\\\" class=\\\"chat__auth-link button mod_v1\\\">Login</a>\\n            </li>\\n          </ul>\\n      </nav>\\n      \\n      <h1 class=\\\"chat__heading\\\">\\n        <span class=\\\"chat__user\\\" *ngIf=\\\"isLogged\\\">Hi, {{userName}},</span>\\n        {{title}}\\n      </h1>\\n\\n      <div class=\\\"chat__search form\\\">\\n        <input type=\\\"text\\\" class=\\\"chat__search-input form-input-text\\\" placeholder=\\\"Search here, if you want...\\\" [(ngModel)]=\\\"searchTerm\\\">\\n      </div>\\n      \\n      <div class=\\\"chat__messages\\\">\\n          <ul class=\\\"chat__messages-list\\\">\\n              <li *ngFor=\\\"let message of messages | filter:searchTerm\\\" class=\\\"chat__messages-list-message chat__messages-message\\\">\\n                  <header class=\\\"chat__messages-message-header\\\">\\n                    <div class=\\\"chat__messages-message-username\\\" [innerHTML]=\\\"message.userName | highlight:searchTerm\\\"></div>\\n                    <small class=\\\"chat__messages-message-date\\\">\\n                      {{message.date}}\\n                    </small>\\n                  </header>\\n                  \\n                  <div class=\\\"chat__messages-message-avatar\\\">\\n                    <img src=\\\"{{message.avatarUrl}}\\\" alt=\\\"\\\">\\n                  </div>\\n                  \\n                  <p [innerHTML]=\\\"message.messageText | highlight:searchTerm | transformMessage:message\\\" class=\\\"chat__messages-message-desc\\\"></p>\\n                  <figure *ngIf=\\\"message.imageUrl\\\" class=\\\"chat__messages-message-pic\\\">\\n                    <img src=\\\"{{message.imageUrl}}\\\" alt=\\\"\\\">\\n                  </figure>\\n              </li>\\n          </ul>\\n      </div>\\n\\n      <form action=\\\"/\\\" class=\\\"chat__form form\\\" (ngSubmit)=\\\"addMessage(message.value); upload(); message.value=''; image.value='';\\\" *ngIf=\\\"isLogged\\\">\\n          <div class=\\\"chat__form__fieldset form-fieldset\\\">\\n            <textarea name=\\\"message\\\" id=\\\"message\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"chat__form-input-textarea form-input-textarea\\\" #message placeholder=\\\"Type your message here...\\\"></textarea>\\n          </div>\\n          <div class=\\\"chat__form__fieldset form-fieldset\\\">\\n            <label for=\\\"username\\\" class=\\\"form-signup__label form-label\\\">Add image:</label>\\n            <div class=\\\"form-fieldset-group mod_flex__justify\\\">\\n              <input name=\\\"image\\\" id=\\\"image\\\" type=\\\"file\\\" class=\\\"chat__form-input-file form-input-file\\\" accept=\\\".png,.jpg,.jpeg,.gif\\\" (change)=\\\"fileChangeEvent($event)\\\" #image>\\n              <button class=\\\"form-button\\\"><span class=\\\"button mod_v1\\\">Send message</span></button>\\n            </div>\\n          </div>\\n      </form>\\n  </div>  \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/chat.component.html\n// module id = 525\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <h1>\\n        Login\\n    </h1>\\n    <form action=\\\"/\\\" class=\\\"form-login form\\\" (ngSubmit)=\\\"login()\\\">\\n        <div class=\\\"form-login__fieldset form-fieldset\\\">\\n            <label for=\\\"username\\\" class=\\\"form-login__label form-label\\\">Username:</label>\\n            <input type=\\\"text\\\" name=\\\"username\\\" id=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"user.username\\\" required class=\\\"form-login__input-text form-input-text\\\">\\n            <p [hidden]=\\\"username.valid || username.pristine\\\" class=\\\"form-error\\\">Username field is invalid</p>\\n        </div>\\n        <div class=\\\"form-login__fieldset form-fieldset\\\">\\n            <label for=\\\"password\\\" class=\\\"form-login__label form-label\\\">Password:</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" required class=\\\"form-login__input-text form-input-text\\\">\\n            <p [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"form-error\\\">Password field is invalid</p>\\n        </div>\\n        <button class=\\\"form-button\\\"><span class=\\\"button mod_v1\\\">Login</span></button>\\n        <p [hidden]=\\\"!loginError\\\" class=\\\"form-error\\\">{{loginError}}</p>\\n    </form>   \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = 526\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <h1>\\n        Signup\\n    </h1>\\n    <form action=\\\"/\\\" class=\\\"form-signup form\\\" (ngSubmit)=\\\"signup()\\\">\\n        <div class=\\\"form-signup__fieldset form-fieldset\\\">\\n            <label for=\\\"username\\\" class=\\\"form-signup__label form-label\\\">Username:</label>\\n            <input type=\\\"text\\\" name=\\\"username\\\" id=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"user.username\\\" required class=\\\"form-signup__input-text form-input-text\\\">\\n            <p [hidden]=\\\"username.valid || username.pristine\\\" class=\\\"form-error\\\">Username field is invalid</p>\\n        </div>\\n        <div class=\\\"form-signup__fieldset form-fieldset\\\">\\n            <label for=\\\"name\\\" class=\\\"form-signup__label form-label\\\">Name:</label>\\n        <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"user.name\\\" class=\\\"form-signup__input-text form-input-text\\\">\\n        </div>\\n        <div class=\\\"form-signup__fieldset form-fieldset\\\">\\n            <label for=\\\"password\\\" class=\\\"form-signup__label form-label\\\">Password:</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" required class=\\\"form-signup__input-text form-input-text\\\">\\n            <p [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"form-error\\\">Password field is invalid</p>\\n        </div>\\n        <button class=\\\"form-button\\\"><span class=\\\"button mod_v1\\\">Signup</span></button>\\n        <p [hidden]=\\\"!signupError\\\" class=\\\"form-error\\\">{{signupError}}</p>\\n    </form>    \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.html\n// module id = 527\n// module chunks = 1"],"sourceRoot":""}